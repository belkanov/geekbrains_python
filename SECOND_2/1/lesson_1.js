'use strict'; // соответствие ES5+

// Задать температуру в градусах по Цельсию.
// Вывести в alert соответствующую температуру в градусах по Фаренгейту.
// Подсказка: расчет идет по формуле Tf = (9 / 5) * Tc + 32, где Tf — температура по Фаренгейту, Tc — по Цельсию.

// использовал let, ибо PyCharm негодовал от var
// а мне глаз режут его подчеркивания =)
let tC = 30;
let tF = (9 / 5) * tC + 32;
console.log(`Temp(C) = ${tC}; Temp(F) = ${tF}`);  //  ES6+

// Объявить две переменные: admin и name.
// Записать в name строку "Василий"; Скопировать значение из name в admin.
// Вывести admin (должно вывестись «Василий»).

let admin;
let name;
admin = "Василий";
name = admin;
console.log(admin);

// * Чему будет равно JS-выражение 1000 + "108"?
//
// судя по вот этой штуке
// https://262.ecma-international.org/12.0/#sec-applystringornumericbinaryoperator
// для опреатора сложения, если в левой или правой части есть строка, то JS пытается обе части сделать строкой и вернуть их объединение
let tst = 1000 + "108";
console.log(`${typeof tst}`);
console.log(`${tst}`);


// * Самостоятельно разобраться с атрибутами тега script (async и defer).
//
// оба атрибута позволяют дальше грузить страницу, не обращая внимания на загрузку скрипта.
// defer-скрипты будут загружаться фоново; выполняться в порядке написания в документе, после загрузки html, до DOMContentLoaded
// async-скрипты будут загружаться фоново; выполняться по мере загрузки, могут прервать обработку html (если загрузятся раньше окончания парсинга html)